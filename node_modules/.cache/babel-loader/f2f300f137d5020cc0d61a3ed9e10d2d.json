{"ast":null,"code":"var _jsxFileName = \"/Users/wilmer/Desktop/Lykeion/src/components/quiz/QuestionBox.jsx\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { gsap } from \"gsap\";\n\nconst QuestionBox = ({\n  question,\n  options,\n  selected\n}) => {\n  const boxRef = useRef(); //const buttonRef = useRef();\n  // wait until DOM has been rendered\n\n  useEffect(() => {\n    gsap.set(\".questionBox:nth-child(5)\", {\n      opacity: 1\n    });\n  });\n\n  function test1() {\n    console.log(\"test\");\n    gsap.to(boxRef.current, {\n      opacity: 0,\n      duration: 1\n    });\n    gsap.to(\".questionBox:nth-child(4)\", {\n      opacity: 1,\n      duration: 1\n    });\n    gsap.to(boxRef.current, {\n      opacity: 0,\n      duration: 1\n    });\n    gsap.to(\".questionBox:nth-child(3)\", {\n      opacity: 1,\n      duration: 1\n    });\n  }\n\n  const [answer, setAnswer] = useState(options);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionBox\",\n    ref: boxRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 39\n    }\n  }, \" \", question, \" \")), answer.map((text, index) => /*#__PURE__*/React.createElement(\"button\", {\n    key: index,\n    onClick: () => {\n      setAnswer([text]);\n      selected(text);\n      test1();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, text)));\n};\n\nexport default QuestionBox;","map":{"version":3,"sources":["/Users/wilmer/Desktop/Lykeion/src/components/quiz/QuestionBox.jsx"],"names":["React","useState","useRef","useEffect","Button","gsap","QuestionBox","question","options","selected","boxRef","set","opacity","test1","console","log","to","current","duration","answer","setAnswer","map","text","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,SAAQC,MAAR,QAAqB,YAArB;AACA,SAASC,IAAT,QAAqB,MAArB;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA;AAApB,CAAD,KAAmC;AAEnD,QAAMC,MAAM,GAAGR,MAAM,EAArB,CAFmD,CAGnD;AAEA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,IAAI,CAACM,GAAL,CAAS,2BAAT,EAAsC;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAtC;AACH,GAFQ,CAAT;;AAIA,WAASC,KAAT,GAAiB;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAV,IAAAA,IAAI,CAACW,EAAL,CAAQN,MAAM,CAACO,OAAf,EAAwB;AAACL,MAAAA,OAAO,EAAC,CAAT;AAAYM,MAAAA,QAAQ,EAAC;AAArB,KAAxB;AACAb,IAAAA,IAAI,CAACW,EAAL,CAAQ,2BAAR,EAAqC;AAACJ,MAAAA,OAAO,EAAC,CAAT;AAAYM,MAAAA,QAAQ,EAAC;AAArB,KAArC;AACAb,IAAAA,IAAI,CAACW,EAAL,CAAQN,MAAM,CAACO,OAAf,EAAwB;AAACL,MAAAA,OAAO,EAAC,CAAT;AAAYM,MAAAA,QAAQ,EAAC;AAArB,KAAxB;AACAb,IAAAA,IAAI,CAACW,EAAL,CAAQ,2BAAR,EAAqC;AAACJ,MAAAA,OAAO,EAAC,CAAT;AAAYM,MAAAA,QAAQ,EAAC;AAArB,KAArC;AAEH;;AAED,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAACO,OAAD,CAApC;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,GAAG,EAAEE,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMH,QAAN,MAA1B,CADJ,EAEKY,MAAM,CAACE,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,kBAER;AAAQ,IAAA,GAAG,EAAEA,KAAb;AACI,IAAA,OAAO,EAAE,MAAM;AACdH,MAAAA,SAAS,CAAC,CAACE,IAAD,CAAD,CAAT;AACAb,MAAAA,QAAQ,CAACa,IAAD,CAAR;AACAT,MAAAA,KAAK;AACL,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKS,IAPL,CAFH,CAFL,CADJ;AAoBH,CAxCD;;AAyCA,eAAehB,WAAf","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\nimport {Button} from \"reactstrap\";\nimport { gsap } from \"gsap\";\n\n\nconst QuestionBox = ({question, options, selected}) => {\n\n    const boxRef = useRef();\n    //const buttonRef = useRef();\n\n    // wait until DOM has been rendered\n    useEffect(() => {\n        gsap.set(\".questionBox:nth-child(5)\", {opacity:1})        \n    });\n\n    function test1() {\n        console.log(\"test\");\n        gsap.to(boxRef.current, {opacity:0, duration:1});\n        gsap.to(\".questionBox:nth-child(4)\", {opacity:1, duration:1});\n        gsap.to(boxRef.current, {opacity:0, duration:1});\n        gsap.to(\".questionBox:nth-child(3)\", {opacity:1, duration:1});\n        \n    }\n\n    const [answer, setAnswer] = useState(options);\n    return (\n        <div className=\"questionBox\" ref={boxRef}>\n            <div className=\"question\"><h1> {question} </h1></div>\n            {answer.map((text, index) => (\n                \n                <button key={index} \n                    onClick={() => {\n                     setAnswer([text]);\n                     selected(text);\n                     test1();\n                    }}\n                    >\n                    {text} \n             \n                </button>\n            ))}\n\n        </div>\n       \n    )\n}\nexport default QuestionBox;"]},"metadata":{},"sourceType":"module"}