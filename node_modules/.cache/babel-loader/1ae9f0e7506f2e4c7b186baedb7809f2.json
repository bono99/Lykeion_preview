{"ast":null,"code":"import _slicedToArray from\"/Users/wilmer/Desktop/Lykeion_preview/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from\"react\";import{gsap}from\"gsap\";var QuestionBox=function QuestionBox(_ref){var question=_ref.question,options=_ref.options,selected=_ref.selected;var questionBoxRef=useRef();function quizAnimation(){gsap.to(questionBoxRef.current,{opacity:0,duration:0.1,zIndex:-1});console.log(questionBoxRef.current);console.log(question);}var _useState=useState(options),_useState2=_slicedToArray(_useState,2),answer=_useState2[0],setAnswer=_useState2[1];return/*#__PURE__*/React.createElement(\"div\",{className:\"questionBox\",ref:questionBoxRef},/*#__PURE__*/React.createElement(\"div\",{className:\"question\"},/*#__PURE__*/React.createElement(\"h1\",null,\" \",question,\" \")),answer.map(function(text,index){return/*#__PURE__*/React.createElement(\"button\",{key:index,onBlur:function onBlur(e){console.log('Triggered because this input lost focus');},onClick:function onClick(){setAnswer([text]);selected(text);quizAnimation();}},text);}));};export default QuestionBox;","map":{"version":3,"sources":["/Users/wilmer/Desktop/Lykeion_preview/src/components/quiz/QuestionBox.jsx"],"names":["React","useState","useRef","gsap","QuestionBox","question","options","selected","questionBoxRef","quizAnimation","to","current","opacity","duration","zIndex","console","log","answer","setAnswer","map","text","index","e"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,MAAzB,KAAsC,OAAtC,CACA,OAASC,IAAT,KAAqB,MAArB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAmC,IAAjCC,CAAAA,QAAiC,MAAjCA,QAAiC,CAAvBC,OAAuB,MAAvBA,OAAuB,CAAdC,QAAc,MAAdA,QAAc,CAEnD,GAAMC,CAAAA,cAAc,CAAGN,MAAM,EAA7B,CAEA,QAASO,CAAAA,aAAT,EAAyB,CACrBN,IAAI,CAACO,EAAL,CAAQF,cAAc,CAACG,OAAvB,CAAgC,CAACC,OAAO,CAAC,CAAT,CAAYC,QAAQ,CAAC,GAArB,CAA0BC,MAAM,CAAC,CAAC,CAAlC,CAAhC,EACAC,OAAO,CAACC,GAAR,CAAYR,cAAc,CAACG,OAA3B,EACAI,OAAO,CAACC,GAAR,CAAYX,QAAZ,EACH,CARkD,cAUvBJ,QAAQ,CAACK,OAAD,CAVe,wCAU5CW,MAV4C,eAUpCC,SAVoC,eAWnD,mBACI,2BAAK,SAAS,CAAC,aAAf,CAA6B,GAAG,CAAEV,cAAlC,eAEI,2BAAK,SAAS,CAAC,UAAf,eAA0B,kCAAMH,QAAN,KAA1B,CAFJ,CAGKY,MAAM,CAACE,GAAP,CAAW,SAACC,IAAD,CAAOC,KAAP,qBAER,8BAAQ,GAAG,CAAEA,KAAb,CACI,MAAM,CAAE,gBAACC,CAAD,CAAO,CACXP,OAAO,CAACC,GAAR,CAAY,yCAAZ,EACH,CAHL,CAII,OAAO,CAAE,kBAAM,CACdE,SAAS,CAAC,CAACE,IAAD,CAAD,CAAT,CACAb,QAAQ,CAACa,IAAD,CAAR,CACAX,aAAa,GACb,CARL,EAWKW,IAXL,CAFQ,EAAX,CAHL,CADJ,CAyBH,CApCD,CAqCA,cAAehB,CAAAA,WAAf","sourcesContent":["import React, {useState, useRef} from \"react\";\nimport { gsap } from \"gsap\";\n\nconst QuestionBox = ({question, options, selected}) => {\n\n    const questionBoxRef = useRef();\n\n    function quizAnimation() {\n        gsap.to(questionBoxRef.current, {opacity:0, duration:0.1, zIndex:-1});\n        console.log(questionBoxRef.current);\n        console.log(question);\n    }\n\n    const [answer, setAnswer] = useState(options);\n    return (\n        <div className=\"questionBox\" ref={questionBoxRef}>\n            \n            <div className=\"question\"><h1> {question} </h1></div>\n            {answer.map((text, index) => (\n                \n                <button key={index} \n                    onBlur={(e) => {\n                        console.log('Triggered because this input lost focus');\n                    }}\n                    onClick={() => {\n                     setAnswer([text]);\n                     selected(text);\n                     quizAnimation();\n                    }}\n                    >\n                \n                    {text} \n             \n                </button>\n            ))}\n\n        </div>\n       \n    )\n}\nexport default QuestionBox;"]},"metadata":{},"sourceType":"module"}