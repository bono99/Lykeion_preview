{"ast":null,"code":"var _jsxFileName = \"/Users/wilmer/Desktop/Lykeion/src/components/quiz/QuestionBox.jsx\";\nimport React, { useState, useRef } from \"react\";\nimport { gsap } from \"gsap\";\n\nconst QuestionBox = ({\n  question,\n  options,\n  selected\n}) => {\n  const questionBoxRef = useRef();\n\n  function quizAnimation() {\n    gsap.to(questionBoxRef.current, {\n      opacity: 0,\n      duration: 0.1,\n      zIndex: -1\n    });\n  }\n\n  const [answer, setAnswer] = useState(options);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionBox\",\n    ref: questionBoxRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 39\n    }\n  }, \" \", question.index, \" \")), answer.map((text, index) => /*#__PURE__*/React.createElement(\"button\", {\n    key: index,\n    onBlur: e => {\n      console.log('Triggered because this input lost focus');\n    },\n    onClick: () => {\n      setAnswer([text]);\n      selected(text);\n      quizAnimation();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, index, text)));\n};\n\nexport default QuestionBox;","map":{"version":3,"sources":["/Users/wilmer/Desktop/Lykeion/src/components/quiz/QuestionBox.jsx"],"names":["React","useState","useRef","gsap","QuestionBox","question","options","selected","questionBoxRef","quizAnimation","to","current","opacity","duration","zIndex","answer","setAnswer","index","map","text","e","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,SAASC,IAAT,QAAqB,MAArB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA;AAApB,CAAD,KAAmC;AAEnD,QAAMC,cAAc,GAAGN,MAAM,EAA7B;;AAEA,WAASO,aAAT,GAAyB;AACrBN,IAAAA,IAAI,CAACO,EAAL,CAAQF,cAAc,CAACG,OAAvB,EAAgC;AAACC,MAAAA,OAAO,EAAC,CAAT;AAAYC,MAAAA,QAAQ,EAAC,GAArB;AAA0BC,MAAAA,MAAM,EAAC,CAAC;AAAlC,KAAhC;AACH;;AAED,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAACK,OAAD,CAApC;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,GAAG,EAAEE,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMH,QAAQ,CAACY,KAAf,MAA1B,CADJ,EAEKF,MAAM,CAACG,GAAP,CAAW,CAACC,IAAD,EAAOF,KAAP,kBAER;AAAQ,IAAA,GAAG,EAAEA,KAAb;AACI,IAAA,MAAM,EAAGG,CAAD,IAAO;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACH,KAHL;AAII,IAAA,OAAO,EAAE,MAAM;AACdN,MAAAA,SAAS,CAAC,CAACG,IAAD,CAAD,CAAT;AACAZ,MAAAA,QAAQ,CAACY,IAAD,CAAR;AACAV,MAAAA,aAAa;AACb,KARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUSQ,KAVT,EAWKE,IAXL,CAFH,CAFL,CADJ;AAwBH,CAjCD;;AAkCA,eAAef,WAAf","sourcesContent":["import React, {useState, useRef} from \"react\";\nimport { gsap } from \"gsap\";\n\nconst QuestionBox = ({question, options, selected}) => {\n\n    const questionBoxRef = useRef();\n\n    function quizAnimation() {\n        gsap.to(questionBoxRef.current, {opacity:0, duration:0.1, zIndex:-1});\n    }\n\n    const [answer, setAnswer] = useState(options);\n    return (\n        <div className=\"questionBox\" ref={questionBoxRef}>\n            <div className=\"question\"><h1> {question.index} </h1></div>\n            {answer.map((text, index) => (\n                \n                <button key={index} \n                    onBlur={(e) => {\n                        console.log('Triggered because this input lost focus');\n                    }}\n                    onClick={() => {\n                     setAnswer([text]);\n                     selected(text);\n                     quizAnimation();\n                    }}\n                    >\n                        {index}\n                    {text} \n             \n                </button>\n            ))}\n\n        </div>\n       \n    )\n}\nexport default QuestionBox;"]},"metadata":{},"sourceType":"module"}